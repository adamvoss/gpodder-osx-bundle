This is a collection of files required to build gPodder.app :
gPodder as a native GTK+ Quartz application for Mac OS X 10.6 and 10.7

I used them to build on a 10.6 X86_64 machine.

Instructions:

place into ~/mymodules

copy dot_jhbuildrc-custom to ~/.jhbuildrc-custom or better, merge my modifications to your config file

If you have MacPorts installed, you must ensure to remove it from the path,
to only build against system libraries.
It might also be a good idea to move it to some non standard location
during the build: some configure scripts are a bit too clever and will use it even if it's not in the path.

Follow instructions in http://live.gnome.org/GTK%2B/OSX/Building
 - bootstrap
   Be sure to skip building libiconv (see https://mail.gnome.org/archives/gtk-osx-users-list/2011-July/msg00001.html)
   otherwise the resulting application will not run under 10.7.
 - meta-gtk-osx-bootstrap
 - meta-gtk-osx-core
   I got an error building glib-2.28: 
   "gconvert.c:65:2: error: #error GNU libiconv not in use but included iconv.h is from libiconv"
   commenting the #warning does the trick "vim glib/gconvert.c +65"
 - python
 - pycairo
   I got an error: ./configure can't find install-sh install.sh, etc.
   to fix it: run autoreconf -i
   and rerun configure phase
   (see http://permalink.gmane.org/gmane.linux.lfs.beyond.devel/20663)
 - pygtk

chmod u+w ~/gtk/inst/lib/libpython2.7.dylib
chmod u+w ~/gtk/inst/lib/libreadline.6.2.dylib 
 

Failing checkouts of specific branches :
I choose the "modulesets" moduleset, so git is used to get many things,
but specific branches are checkout. This failed each time :
choose to start a shell an adapt following command (git branch -a to confirm remote branch exists)
git checkout -b WANTED_BRANCH origin/WANTED_BRANCH


(12-06-2012: this is not needed anymore)
Failing autogen.sh for pygtk:
insert following macros in m4/jhflags.m4 if autogen.sh fails

dnl  _LT_DECL_SED
dnl  ------------
dnl  Check for a fully-functional sed program, that truncates
dnl  as few characters as possible.  Prefer GNU sed if found.
AC_DEFUN([_LT_DECL_SED],
[AC_PROG_SED
test -z "$SED" && SED=sed
Xsed="$SED -e 1s/^X//"
_LT_DECL([], [SED], [1], [A sed program that does not truncate output])
_LT_DECL([], [Xsed], ["\$SED -e 1s/^X//"],
    [Sed that helps us avoid accidentally triggering echo(1) options like -n])
])dnl  _LT_DECL_SED


dnl  _LT_FUNC_STRIPNAME_CNF
dnl  ----------------------
dnl  func_stripname_cnf prefix suffix name
dnl  strip PREFIX and SUFFIX off of NAME.
dnl  PREFIX and SUFFIX must not contain globbing or regex special
dnl  characters, hashes, percent signs, but SUFFIX may contain a leading
dnl  dot (in which case that matches only a dot).
dnl 
dnl  This function is identical to the (non-XSI) version of func_stripname,
dnl  except this one can be used by m4 code that may be executed by configure,
dnl  rather than the libtool script.
AC_DEFUN([_LT_FUNC_STRIPNAME_CNF],[dnl
AC_REQUIRE([_LT_DECL_SED])
AC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])
func_stripname_cnf ()
{
  case ${2} in
  .*) func_stripname_result=`$ECHO "${3}" | $SED "s%^${1}%%; s%\\\\${2}\$%%"`;;
  *)  func_stripname_result=`$ECHO "${3}" | $SED "s%^${1}%%; s%${2}\$%%"`;;
  esac
} dnl  func_stripname_cnf
])dnl  _LT_FUNC_STRIPNAME_CNF



Installing gPodder:
Latest version of gPodder is used, with a few custom patches (see postproc.sh)

jhbuild build gtk-mac-integration-python
jhbuild build gpodder
  - problem with zlib ("please use configure first, thank you")
    run ./configure --prefix /Users/elelay/gtk/inst --libdir '/Users/elelay/gtk/inst/lib'
        make
        rerun install phase

At this point,
	jhbuild shell
	gpodder
should work.

just a few more packages:
jhbuild build meta-gtk-osx-themes



Bundling gPodder:
install gtk-mac-bundler, following http://live.gnome.org/GTK%2B/OSX/Bundling
cd mymodules/gpodder-bundle
jhbuild shell
~/.local/bin/gtk-mac-bundler gpodder.bundle && ./postproc.sh 

produces gPodder.app in Desktop
test by double-clicking on gPodder.app
test by moving ~/gtk/inst away and re-launching

Issues:
- none

Using gPodder:
see https://github.com/elelay/gpoder-osx-bundle/wiki/Using for instructions...
